version: "3.9"

services:

  server_bitbucket:
    image: drone/drone:2
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=docker2docker"
        - "traefik.docker.lbswarm=true"
        - "traefik.http.routers.droneci.entrypoints=web"
        - traefik.http.routers.droneci.rule=Host(`droneci.local`)
        - traefik.http.services.droneci.loadbalancer.server.port=80
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.90'
          memory: 1G
    env_file: 
      - ./.env/bitbucket.env
    expose:
      - 80
      - 443
    volumes:
      - drone-server-data:/var/lib/drone/
    networks:
      - docker2docker

  agent:
    image: drone/drone-runner-docker:1
    command: agent
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.90'
          memory: 1G
    env_file:
      - ./.env/agents.env
    expose: 
      - 3000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks: 
      - docker2docker

volumes:
  drone-server-data:
    external: true

networks: 
  docker2docker:
    external: true
