version: "3.9"

services:
  bitbucket:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    # network_mode: host
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.lbswarm=true
        - traefik.docker.network=docker2docker
        - traefik.http.routers.bitbucket.entrypoints=web,websecure
        - traefik.http.routers.bitbucket.rule=Host(`ngrok-bb.docker.local`)
        - traefik.http.services.bitbucket.loadbalancer.server.port=4040
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.90'
          memory: 1G
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./configs/bitbucket.yaml:/etc/ngrok.yml:rw
    env_file:
      - ./.secrets/bitbucket.env
    networks:
      - docker2docker

  github:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    # network_mode: host
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.lbswarm=true
        - traefik.docker.network=docker2docker
        - traefik.http.routers.github.entrypoints=web,websecure
        - traefik.http.routers.github.rule=Host(`ngrok-gh.docker.local`)
        - traefik.http.services.github.loadbalancer.server.port=4040
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.90'
          memory: 1G
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./configs/github.yaml:/etc/ngrok.yml:rw
    env_file:
      - ./.secrets/github.env
    networks:
      - docker2docker

networks: 
  docker2docker:
    external: true
