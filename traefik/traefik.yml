version: '3.9'

services:

  hub-agent:
    hostname: hub-agent
    image: ghcr.io/traefik/hub-agent-traefik:v1.1.0
    command:
      - run
      - --hub.token=${DOCKER_AGENT_TOKEN}
      - --auth-server.advertise-url=http://hub-agent
      - --traefik.host=traefik
      - --traefik.docker.swarm-mode
      - --traefik.tls.insecure=true
    deploy:
      replicas: 0
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - docker2docker

  traefik:
    image: traefik
    environment:
      HOSTNAME: traefik
      SERVICE_NAME: traefik
      SERVICE_TAGS: lb, proxy
    labels:
      - "SERVICE_IGNORE=false"
      - "traefik.enable=true"
    command:
      - --api=true
      - --ping=false
      - --accesslog=true
      - --api.debug=true
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker.watch=true
      - --providers.docker.swarmmode=true
      - --providers.docker.network=docker2docker
      - --metrics.prometheus=true
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --experimental.hub=true
      - --hub.tls.insecure=true
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
      resources:
        limits:
          cpus: '1'
          memory: 500M
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - docker2docker

networks:
  docker2docker:
    external: true
